name: Deploy - DEV

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.docker-build.outputs.registry }}
      image: ${{ steps.docker-build.outputs.image-name }}
      tag: ${{ steps.docker-build.outputs.tag }}
      image-sg-example-app: ${{ steps.docker-build.outputs.image-sg-example-app }}
      image-sample: ${{ steps.docker-build.outputs.image-sample }}
      image-inventory: ${{ steps.docker-build.outputs.image-inventory }}
      image-product-info: ${{ steps.docker-build.outputs.image-product-info }}
      image-feasibility: ${{ steps.docker-build.outputs.image-feasibility }}
    strategy:
      matrix:
        app: [sg-example-app, sample, inventory, product-info, feasibility]
        include:
          - app: sg-example-app
            dockerfile: apps/sg-example-app/Dockerfile
          - app: sample
            dockerfile: apps/sample/Dockerfile
          - app: inventory
            dockerfile: apps/inventory/Dockerfile
          - app: product-info
            dockerfile: apps/productInfo/Dockerfile
          - app: feasibility
            dockerfile: apps/feasibility/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build and push Docker image
        id: docker-build
        run: |
          echo "registry=registry" >> $GITHUB_OUTPUT
          echo "image=${{ matrix.app }}" >> $GITHUB_OUTPUT
          echo "image-${{ matrix.app }}={\"app\": \"${{ matrix.app }}\", \"dockerfile\": \"${{ matrix.dockerfile }}\", \"tag\": \"${{ github.sha }}\", \"registry\": \"registry\"}" >> $GITHUB_OUTPUT
          echo "tag=tag" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        run: |
          outputs='${{ toJSON(needs.build.outputs.*) }}'
          app_objects=$(echo "$outputs" | jq -r '.[] | select(startswith("{\"app\":"))')
          echo "Parsed app objects"
          apps=$(echo "$app_objects" | jq -r '.app')
          echo "Parsed apps"
          dockerfiles=$(echo "$app_objects" | jq -r '.dockerfile')
          echo "Parsed dockerfiles"
          tags=$(echo "$app_objects" | jq -r '.tag')
          echo "Parsed tags"
          registries=$(echo "$app_objects" | jq -r '.registry')
          echo "Parsed registries"
          # Loop through apps with index
          for i in $(seq 0 $(echo "$apps" | jq -r '. | length - 1')); do
            app=$(echo "$apps" | jq -r ".[$i]")
            dockerfile=$(echo "$dockerfiles" | jq -r ".[$i]")
            tag=$(echo "$tags" | jq -r ".[$i]")
            registry=$(echo "$registries" | jq -r ".[$i]")
            echo "Deploying $app with dockerfile $dockerfile, tag $tag, registry $registry"
          done
